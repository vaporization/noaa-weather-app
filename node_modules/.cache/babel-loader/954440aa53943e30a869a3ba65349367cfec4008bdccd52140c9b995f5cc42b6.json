{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saweb\\\\noaa-weather-app\\\\src\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { auth } from './firebase';\nimport { saveUserPreferences, getUserPreferences, resetUserPreferences, saveUserTheme, getUserThemes, deleteUserTheme } from './userPreferences';\nimport './Profile.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Profile = ({\n  setGradientColors,\n  setWaveColors,\n  setMenuColors,\n  setDataColumnColors,\n  setDataEntryColor\n}) => {\n  _s();\n  const [startColor, setStartColor] = useState('#003057');\n  const [endColor, setEndColor] = useState('#001F3D');\n  const [wave1Color, setWave1Color] = useState('rgba(18, 119, 176, 0.45)');\n  const [wave2Color, setWave2Color] = useState('rgba(10, 90, 150, 0.45)');\n  const [wave3Color, setWave3Color] = useState('rgba(5, 60, 120, 0.45)');\n  const [wave1Alpha, setWave1Alpha] = useState(0.45);\n  const [wave2Alpha, setWave2Alpha] = useState(0.45);\n  const [wave3Alpha, setWave3Alpha] = useState(0.45);\n  const [menuBackgroundColor, setMenuBackgroundColor] = useState('#286090');\n  const [menuTextColor, setMenuTextColor] = useState('#000000');\n  const [menuButtonColor, setMenuButtonColor] = useState('#286090');\n  const [dataColumnTextColor, setDataColumnTextColor] = useState('#000000');\n  const [dataColumnBackgroundColor, setDataColumnBackgroundColor] = useState('#FFFFFF');\n  const [dataColumnAlpha, setDataColumnAlpha] = useState(1);\n  const [dataEntryBackgroundColor, setDataEntryBackgroundColor] = useState('#FFFFFF');\n  const [message, setMessage] = useState('');\n  const [buttonDisabled, setButtonDisabled] = useState(false);\n  const [themeName, setThemeName] = useState('');\n  const [themes, setThemes] = useState([]);\n  useEffect(() => {\n    const fetchPreferences = async () => {\n      try {\n        const user = auth.currentUser;\n        if (user) {\n          const data = await getUserPreferences(user.uid);\n          const themesData = await getUserThemes(user.uid);\n          setThemes(themesData || []);\n          if (data) {\n            const {\n              gradientColors,\n              waveColors,\n              menuColors,\n              dataColumnColors,\n              dataEntryColor\n            } = data;\n            if (gradientColors) {\n              setStartColor(gradientColors.start);\n              setEndColor(gradientColors.end);\n              setGradientColors(gradientColors);\n            }\n            if (waveColors) {\n              setWave1Color(waveColors.wave1);\n              setWave2Color(waveColors.wave2);\n              setWave3Color(waveColors.wave3);\n              setWave1Alpha(parseFloat(waveColors.wave1Alpha));\n              setWave2Alpha(parseFloat(waveColors.wave2Alpha));\n              setWave3Alpha(parseFloat(waveColors.wave3Alpha));\n              setWaveColors(waveColors);\n            }\n            if (menuColors) {\n              setMenuBackgroundColor(menuColors.backgroundColor || '#286090');\n              setMenuTextColor(menuColors.textColor || '#000000');\n              setMenuButtonColor(menuColors.buttonColor || '#286090');\n              setMenuColors(menuColors);\n            } else {\n              setMenuColors({\n                backgroundColor: '#286090',\n                textColor: '#000000',\n                buttonColor: '#286090'\n              });\n            }\n            if (dataColumnColors) {\n              setDataColumnTextColor(dataColumnColors.textColor);\n              setDataColumnBackgroundColor(dataColumnColors.backgroundColor);\n              setDataColumnAlpha(parseFloat(dataColumnColors.alpha));\n              setDataColumnColors(dataColumnColors);\n            } else {\n              setDataColumnColors({\n                textColor: '#000000',\n                backgroundColor: '#FFFFFF',\n                alpha: '1'\n              });\n            }\n            if (dataEntryColor) {\n              setDataEntryBackgroundColor(dataEntryColor);\n              setDataEntryColor(dataEntryColor);\n            } else {\n              setDataEntryColor('#FFFFFF');\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching user preferences:', error);\n      }\n    };\n    fetchPreferences();\n  }, [setGradientColors, setWaveColors, setMenuColors, setDataColumnColors, setDataEntryColor]);\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (!user) {\n        // Reset state when user logs out\n        setThemes([]);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  const handleSave = async () => {\n    try {\n      setButtonDisabled(true);\n      const user = auth.currentUser;\n      if (user) {\n        const gradientColors = {\n          start: startColor,\n          end: endColor\n        };\n        const waveColors = {\n          wave1: wave1Color,\n          wave2: wave2Color,\n          wave3: wave3Color,\n          wave1Alpha: wave1Alpha.toString(),\n          wave2Alpha: wave2Alpha.toString(),\n          wave3Alpha: wave3Alpha.toString()\n        };\n        const menuColors = {\n          backgroundColor: menuBackgroundColor,\n          textColor: menuTextColor,\n          buttonColor: menuButtonColor\n        };\n        const dataColumnColors = {\n          textColor: dataColumnTextColor,\n          backgroundColor: dataColumnBackgroundColor,\n          alpha: dataColumnAlpha.toString()\n        };\n        const dataEntryColor = dataEntryBackgroundColor;\n        await saveUserPreferences(user.uid, gradientColors, waveColors, menuColors, dataColumnColors, dataEntryColor);\n        setGradientColors(gradientColors);\n        setWaveColors(waveColors);\n        setMenuColors(menuColors);\n        setDataColumnColors(dataColumnColors);\n        setDataEntryColor(dataEntryColor);\n        setMessage('Preferences saved successfully!');\n        setTimeout(() => setButtonDisabled(false), 2000);\n      }\n    } catch (error) {\n      setMessage(`Error saving preferences: ${error.message}`);\n    }\n  };\n  const handleReset = async () => {\n    try {\n      const user = auth.currentUser;\n      if (user) {\n        await resetUserPreferences(user.uid);\n        setStartColor('#003057');\n        setEndColor('#001F3D');\n        setWave1Color('rgba(18, 119, 176, 0.45)');\n        setWave2Color('rgba(10, 90, 150, 0.45)');\n        setWave3Color('rgba(5, 60, 120, 0.45)');\n        setWave1Alpha(0.45);\n        setWave2Alpha(0.45);\n        setWave3Alpha(0.45);\n        setGradientColors({\n          start: '#003057',\n          end: '#001F3D'\n        });\n        setWaveColors({\n          wave1: 'rgba(18, 119, 176, 0.45)',\n          wave2: 'rgba(10, 90, 150, 0.45)',\n          wave3: 'rgba(5, 60, 120, 0.45)',\n          wave1Alpha: '0.45',\n          wave2Alpha: '0.45',\n          wave3Alpha: '0.45'\n        });\n        setMenuBackgroundColor('#286090');\n        setMenuTextColor('#000000');\n        setMenuButtonColor('#286090');\n        setMenuColors({\n          backgroundColor: '#286090',\n          textColor: '#000000',\n          buttonColor: '#286090'\n        });\n        setDataColumnTextColor('#000000');\n        setDataColumnBackgroundColor('#FFFFFF');\n        setDataColumnAlpha(1);\n        setDataColumnColors({\n          textColor: '#000000',\n          backgroundColor: '#FFFFFF',\n          alpha: '1'\n        });\n        setDataEntryBackgroundColor('#FFFFFF');\n        setDataEntryColor('#FFFFFF');\n        setMessage('Preferences reset to default successfully!');\n      }\n    } catch (error) {\n      setMessage(`Error resetting preferences: ${error.message}`);\n    }\n  };\n  const handleWaveColorChange = (waveColor, setWaveColor, waveAlpha, setWaveAlpha) => e => {\n    const color = e.target.value;\n    const rgbaColor = `rgba(${parseInt(color.slice(1, 3), 16)}, ${parseInt(color.slice(3, 5), 16)}, ${parseInt(color.slice(5, 7), 16)}, ${waveAlpha})`;\n    setWaveColor(rgbaColor);\n  };\n  const handleWaveAlphaChange = (waveAlpha, setWaveAlpha, waveColor, setWaveColor) => e => {\n    const alpha = e.target.value;\n    const color = waveColor.match(/\\d+/g);\n    const rgbaColor = `rgba(${color[0]}, ${color[1]}, ${color[2]}, ${alpha})`;\n    setWaveAlpha(alpha);\n    setWaveColor(rgbaColor);\n  };\n  const handleMenuColorChange = setMenuColor => e => {\n    const color = e.target.value;\n    setMenuColor(color);\n  };\n  const handleDataColumnTextColorChange = e => {\n    const color = e.target.value;\n    setDataColumnTextColor(color);\n  };\n  const handleDataColumnBackgroundColorChange = e => {\n    const color = e.target.value;\n    setDataColumnBackgroundColor(color);\n  };\n  const handleDataColumnAlphaChange = e => {\n    const alpha = e.target.value;\n    setDataColumnAlpha(alpha);\n  };\n  const handleDataEntryBackgroundColorChange = e => {\n    const color = e.target.value;\n    setDataEntryBackgroundColor(color);\n  };\n  const handleSaveTheme = async () => {\n    try {\n      const user = auth.currentUser;\n      if (user && themeName) {\n        const gradientColors = {\n          start: startColor,\n          end: endColor\n        };\n        const waveColors = {\n          wave1: wave1Color,\n          wave2: wave2Color,\n          wave3: wave3Color,\n          wave1Alpha: wave1Alpha.toString(),\n          wave2Alpha: wave2Alpha.toString(),\n          wave3Alpha: wave3Alpha.toString()\n        };\n        const menuColors = {\n          backgroundColor: menuBackgroundColor,\n          textColor: menuTextColor,\n          buttonColor: menuButtonColor\n        };\n        const dataColumnColors = {\n          textColor: dataColumnTextColor,\n          backgroundColor: dataColumnBackgroundColor,\n          alpha: dataColumnAlpha.toString()\n        };\n        const dataEntryColor = dataEntryBackgroundColor;\n        await saveUserTheme(user.uid, themeName, gradientColors, waveColors, menuColors, dataColumnColors, dataEntryColor);\n        const updatedThemes = await getUserThemes(user.uid);\n        setThemes(updatedThemes);\n        setMessage('Theme saved successfully!');\n      } else {\n        setMessage('Please enter a theme name.');\n      }\n    } catch (error) {\n      setMessage(`Error saving theme: ${error.message}`);\n    }\n  };\n  const handleApplyTheme = theme => {\n    setStartColor(theme.gradientColors.start);\n    setEndColor(theme.gradientColors.end);\n    setWave1Color(theme.waveColors.wave1);\n    setWave2Color(theme.waveColors.wave2);\n    setWave3Color(theme.waveColors.wave3);\n    setWave1Alpha(parseFloat(theme.waveColors.wave1Alpha));\n    setWave2Alpha(parseFloat(theme.waveColors.wave2Alpha));\n    setWave3Alpha(parseFloat(theme.waveColors.wave3Alpha));\n    setMenuBackgroundColor(theme.menuColors.backgroundColor);\n    setMenuTextColor(theme.menuColors.textColor);\n    setMenuButtonColor(theme.menuColors.buttonColor);\n    setDataColumnTextColor(theme.dataColumnColors.textColor);\n    setDataColumnBackgroundColor(theme.dataColumnColors.backgroundColor);\n    setDataColumnAlpha(parseFloat(theme.dataColumnColors.alpha));\n    setDataEntryBackgroundColor(theme.dataEntryColor);\n    setGradientColors(theme.gradientColors);\n    setWaveColors(theme.waveColors);\n    setMenuColors(theme.menuColors);\n    setDataColumnColors(theme.dataColumnColors);\n    setDataEntryColor(theme.dataEntryColor);\n  };\n  const handleDeleteTheme = async themeName => {\n    try {\n      const user = auth.currentUser;\n      if (user) {\n        await deleteUserTheme(user.uid, themeName);\n        const updatedThemes = await getUserThemes(user.uid);\n        setThemes(updatedThemes);\n        setMessage('Theme deleted successfully!');\n      }\n    } catch (error) {\n      setMessage(`Error deleting theme: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Customize your background gradient:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-picker\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Start Color: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: startColor,\n          onChange: e => setStartColor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-picker\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"End Color: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: endColor,\n          onChange: e => setEndColor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Customize your wave colors:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-picker\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Wave 1 Color: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: `#${wave1Color.match(/\\d+/g).slice(0, 3).map(x => (+x).toString(16).padStart(2, '0')).join('')}`,\n          onChange: handleWaveColorChange(wave1Color, setWave1Color, wave1Alpha, setWave1Alpha)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Transparency: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.01\",\n          value: wave1Alpha,\n          onChange: handleWaveAlphaChange(wave1Alpha, setWave1Alpha, wave1Color, setWave1Color)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-picker\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Wave 2 Color: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: `#${wave2Color.match(/\\d+/g).slice(0, 3).map(x => (+x).toString(16).padStart(2, '0')).join('')}`,\n          onChange: handleWaveColorChange(wave2Color, setWave2Color, wave2Alpha, setWave2Alpha)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Transparency: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.01\",\n          value: wave2Alpha,\n          onChange: handleWaveAlphaChange(wave2Alpha, setWave2Alpha, wave2Color, setWave2Color)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-picker\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Wave 3 Color: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: `#${wave3Color.match(/\\d+/g).slice(0, 3).map(x => (+x).toString(16).padStart(2, '0')).join('')}`,\n          onChange: handleWaveColorChange(wave3Color, setWave3Color, wave3Alpha, setWave3Alpha)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Transparency: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.01\",\n          value: wave3Alpha,\n          onChange: handleWaveAlphaChange(wave3Alpha, setWave3Alpha, wave3Color, setWave3Color)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Customize your menu colors:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-picker\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Menu Background Color: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: menuBackgroundColor,\n          onChange: handleMenuColorChange(setMenuBackgroundColor)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-picker\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Menu Text Color: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: menuTextColor,\n          onChange: handleMenuColorChange(setMenuTextColor)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-picker\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Menu Button Color: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: menuButtonColor,\n          onChange: handleMenuColorChange(setMenuButtonColor)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Customize your data column text color:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-picker\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Data Column Text Color: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: dataColumnTextColor,\n          onChange: handleDataColumnTextColorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Customize your data column background color:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-picker\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Data Column Background Color: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: dataColumnBackgroundColor,\n          onChange: handleDataColumnBackgroundColorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-picker\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Transparency: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.01\",\n          value: dataColumnAlpha,\n          onChange: handleDataColumnAlphaChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Customize your data entry background color:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-picker\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Data Entry Background Color: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: dataEntryBackgroundColor,\n          onChange: handleDataEntryBackgroundColorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        disabled: buttonDisabled,\n        children: \"Save Preferences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 89\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 98\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        children: \"Reset to Default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 64\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 73\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"theme-management\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Manage Themes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter theme name\",\n          value: themeName,\n          onChange: e => setThemeName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveTheme,\n          children: \"Save Theme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this), themes.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Saved Themes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: themes.map(theme => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleApplyTheme(theme),\n                children: [\"Apply \", theme.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteTheme(theme.name),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 21\n              }, this)]\n            }, theme.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"9aOrWt4Q7ZBuB7ZN4lTg3RDWSBs=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","auth","saveUserPreferences","getUserPreferences","resetUserPreferences","saveUserTheme","getUserThemes","deleteUserTheme","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","setGradientColors","setWaveColors","setMenuColors","setDataColumnColors","setDataEntryColor","_s","startColor","setStartColor","endColor","setEndColor","wave1Color","setWave1Color","wave2Color","setWave2Color","wave3Color","setWave3Color","wave1Alpha","setWave1Alpha","wave2Alpha","setWave2Alpha","wave3Alpha","setWave3Alpha","menuBackgroundColor","setMenuBackgroundColor","menuTextColor","setMenuTextColor","menuButtonColor","setMenuButtonColor","dataColumnTextColor","setDataColumnTextColor","dataColumnBackgroundColor","setDataColumnBackgroundColor","dataColumnAlpha","setDataColumnAlpha","dataEntryBackgroundColor","setDataEntryBackgroundColor","message","setMessage","buttonDisabled","setButtonDisabled","themeName","setThemeName","themes","setThemes","fetchPreferences","user","currentUser","data","uid","themesData","gradientColors","waveColors","menuColors","dataColumnColors","dataEntryColor","start","end","wave1","wave2","wave3","parseFloat","backgroundColor","textColor","buttonColor","alpha","error","console","unsubscribe","onAuthStateChanged","handleSave","toString","setTimeout","handleReset","handleWaveColorChange","waveColor","setWaveColor","waveAlpha","setWaveAlpha","e","color","target","value","rgbaColor","parseInt","slice","handleWaveAlphaChange","match","handleMenuColorChange","setMenuColor","handleDataColumnTextColorChange","handleDataColumnBackgroundColorChange","handleDataColumnAlphaChange","handleDataEntryBackgroundColorChange","handleSaveTheme","updatedThemes","handleApplyTheme","theme","handleDeleteTheme","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","map","x","padStart","join","min","max","step","onClick","disabled","placeholder","length","name","_c","$RefreshReg$"],"sources":["C:/Users/saweb/noaa-weather-app/src/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { auth } from './firebase';\r\nimport { saveUserPreferences, getUserPreferences, resetUserPreferences, saveUserTheme, getUserThemes, deleteUserTheme } from './userPreferences';\r\nimport './Profile.css';\r\n\r\nconst Profile = ({ setGradientColors, setWaveColors, setMenuColors, setDataColumnColors, setDataEntryColor }) => {\r\n  const [startColor, setStartColor] = useState('#003057');\r\n  const [endColor, setEndColor] = useState('#001F3D');\r\n  const [wave1Color, setWave1Color] = useState('rgba(18, 119, 176, 0.45)');\r\n  const [wave2Color, setWave2Color] = useState('rgba(10, 90, 150, 0.45)');\r\n  const [wave3Color, setWave3Color] = useState('rgba(5, 60, 120, 0.45)');\r\n  const [wave1Alpha, setWave1Alpha] = useState(0.45);\r\n  const [wave2Alpha, setWave2Alpha] = useState(0.45);\r\n  const [wave3Alpha, setWave3Alpha] = useState(0.45);\r\n  const [menuBackgroundColor, setMenuBackgroundColor] = useState('#286090');\r\n  const [menuTextColor, setMenuTextColor] = useState('#000000');\r\n  const [menuButtonColor, setMenuButtonColor] = useState('#286090');\r\n  const [dataColumnTextColor, setDataColumnTextColor] = useState('#000000');\r\n  const [dataColumnBackgroundColor, setDataColumnBackgroundColor] = useState('#FFFFFF');\r\n  const [dataColumnAlpha, setDataColumnAlpha] = useState(1);\r\n  const [dataEntryBackgroundColor, setDataEntryBackgroundColor] = useState('#FFFFFF');\r\n  const [message, setMessage] = useState('');\r\n  const [buttonDisabled, setButtonDisabled] = useState(false);\r\n  const [themeName, setThemeName] = useState('');\r\n  const [themes, setThemes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPreferences = async () => {\r\n      try {\r\n        const user = auth.currentUser;\r\n        if (user) {\r\n          const data = await getUserPreferences(user.uid);\r\n          const themesData = await getUserThemes(user.uid);\r\n          setThemes(themesData || []);\r\n          if (data) {\r\n            const { gradientColors, waveColors, menuColors, dataColumnColors, dataEntryColor } = data;\r\n            if (gradientColors) {\r\n              setStartColor(gradientColors.start);\r\n              setEndColor(gradientColors.end);\r\n              setGradientColors(gradientColors);\r\n            }\r\n            if (waveColors) {\r\n              setWave1Color(waveColors.wave1);\r\n              setWave2Color(waveColors.wave2);\r\n              setWave3Color(waveColors.wave3);\r\n              setWave1Alpha(parseFloat(waveColors.wave1Alpha));\r\n              setWave2Alpha(parseFloat(waveColors.wave2Alpha));\r\n              setWave3Alpha(parseFloat(waveColors.wave3Alpha));\r\n              setWaveColors(waveColors);\r\n            }\r\n            if (menuColors) {\r\n              setMenuBackgroundColor(menuColors.backgroundColor || '#286090');\r\n              setMenuTextColor(menuColors.textColor || '#000000');\r\n              setMenuButtonColor(menuColors.buttonColor || '#286090');\r\n              setMenuColors(menuColors);\r\n            } else {\r\n              setMenuColors({\r\n                backgroundColor: '#286090',\r\n                textColor: '#000000',\r\n                buttonColor: '#286090'\r\n              });\r\n            }\r\n            if (dataColumnColors) {\r\n              setDataColumnTextColor(dataColumnColors.textColor);\r\n              setDataColumnBackgroundColor(dataColumnColors.backgroundColor);\r\n              setDataColumnAlpha(parseFloat(dataColumnColors.alpha));\r\n              setDataColumnColors(dataColumnColors);\r\n            } else {\r\n              setDataColumnColors({\r\n                textColor: '#000000',\r\n                backgroundColor: '#FFFFFF',\r\n                alpha: '1'\r\n              });\r\n            }\r\n            if (dataEntryColor) {\r\n              setDataEntryBackgroundColor(dataEntryColor);\r\n              setDataEntryColor(dataEntryColor);\r\n            } else {\r\n              setDataEntryColor('#FFFFFF');\r\n            }\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user preferences:', error);\r\n      }\r\n    };\r\n\r\n    fetchPreferences();\r\n  }, [setGradientColors, setWaveColors, setMenuColors, setDataColumnColors, setDataEntryColor]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (!user) {\r\n        // Reset state when user logs out\r\n        setThemes([]);\r\n      }\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      setButtonDisabled(true);\r\n      const user = auth.currentUser;\r\n      if (user) {\r\n        const gradientColors = { start: startColor, end: endColor };\r\n        const waveColors = {\r\n          wave1: wave1Color,\r\n          wave2: wave2Color,\r\n          wave3: wave3Color,\r\n          wave1Alpha: wave1Alpha.toString(),\r\n          wave2Alpha: wave2Alpha.toString(),\r\n          wave3Alpha: wave3Alpha.toString()\r\n        };\r\n        const menuColors = {\r\n          backgroundColor: menuBackgroundColor,\r\n          textColor: menuTextColor,\r\n          buttonColor: menuButtonColor\r\n        };\r\n        const dataColumnColors = {\r\n          textColor: dataColumnTextColor,\r\n          backgroundColor: dataColumnBackgroundColor,\r\n          alpha: dataColumnAlpha.toString()\r\n        };\r\n        const dataEntryColor = dataEntryBackgroundColor;\r\n        await saveUserPreferences(user.uid, gradientColors, waveColors, menuColors, dataColumnColors, dataEntryColor);\r\n        setGradientColors(gradientColors);\r\n        setWaveColors(waveColors);\r\n        setMenuColors(menuColors);\r\n        setDataColumnColors(dataColumnColors);\r\n        setDataEntryColor(dataEntryColor);\r\n        setMessage('Preferences saved successfully!');\r\n        setTimeout(() => setButtonDisabled(false), 2000);\r\n      }\r\n    } catch (error) {\r\n      setMessage(`Error saving preferences: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleReset = async () => {\r\n    try {\r\n      const user = auth.currentUser;\r\n      if (user) {\r\n        await resetUserPreferences(user.uid);\r\n        setStartColor('#003057');\r\n        setEndColor('#001F3D');\r\n        setWave1Color('rgba(18, 119, 176, 0.45)');\r\n        setWave2Color('rgba(10, 90, 150, 0.45)');\r\n        setWave3Color('rgba(5, 60, 120, 0.45)');\r\n        setWave1Alpha(0.45);\r\n        setWave2Alpha(0.45);\r\n        setWave3Alpha(0.45);\r\n        setGradientColors({ start: '#003057', end: '#001F3D' });\r\n        setWaveColors({\r\n          wave1: 'rgba(18, 119, 176, 0.45)',\r\n          wave2: 'rgba(10, 90, 150, 0.45)',\r\n          wave3: 'rgba(5, 60, 120, 0.45)',\r\n          wave1Alpha: '0.45',\r\n          wave2Alpha: '0.45',\r\n          wave3Alpha: '0.45'\r\n        });\r\n        setMenuBackgroundColor('#286090');\r\n        setMenuTextColor('#000000');\r\n        setMenuButtonColor('#286090');\r\n        setMenuColors({\r\n          backgroundColor: '#286090',\r\n          textColor: '#000000',\r\n          buttonColor: '#286090'\r\n        });\r\n        setDataColumnTextColor('#000000');\r\n        setDataColumnBackgroundColor('#FFFFFF');\r\n        setDataColumnAlpha(1);\r\n        setDataColumnColors({\r\n          textColor: '#000000',\r\n          backgroundColor: '#FFFFFF',\r\n          alpha: '1'\r\n        });\r\n        setDataEntryBackgroundColor('#FFFFFF');\r\n        setDataEntryColor('#FFFFFF');\r\n        setMessage('Preferences reset to default successfully!');\r\n      }\r\n    } catch (error) {\r\n      setMessage(`Error resetting preferences: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleWaveColorChange = (waveColor, setWaveColor, waveAlpha, setWaveAlpha) => (e) => {\r\n    const color = e.target.value;\r\n    const rgbaColor = `rgba(${parseInt(color.slice(1, 3), 16)}, ${parseInt(color.slice(3, 5), 16)}, ${parseInt(color.slice(5, 7), 16)}, ${waveAlpha})`;\r\n    setWaveColor(rgbaColor);\r\n  };\r\n\r\n  const handleWaveAlphaChange = (waveAlpha, setWaveAlpha, waveColor, setWaveColor) => (e) => {\r\n    const alpha = e.target.value;\r\n    const color = waveColor.match(/\\d+/g);\r\n    const rgbaColor = `rgba(${color[0]}, ${color[1]}, ${color[2]}, ${alpha})`;\r\n    setWaveAlpha(alpha);\r\n    setWaveColor(rgbaColor);\r\n  };\r\n\r\n  const handleMenuColorChange = (setMenuColor) => (e) => {\r\n    const color = e.target.value;\r\n    setMenuColor(color);\r\n  };\r\n\r\n  const handleDataColumnTextColorChange = (e) => {\r\n    const color = e.target.value;\r\n    setDataColumnTextColor(color);\r\n  };\r\n\r\n  const handleDataColumnBackgroundColorChange = (e) => {\r\n    const color = e.target.value;\r\n    setDataColumnBackgroundColor(color);\r\n  };\r\n\r\n  const handleDataColumnAlphaChange = (e) => {\r\n    const alpha = e.target.value;\r\n    setDataColumnAlpha(alpha);\r\n  };\r\n\r\n  const handleDataEntryBackgroundColorChange = (e) => {\r\n    const color = e.target.value;\r\n    setDataEntryBackgroundColor(color);\r\n  };\r\n\r\n  const handleSaveTheme = async () => {\r\n    try {\r\n      const user = auth.currentUser;\r\n      if (user && themeName) {\r\n        const gradientColors = { start: startColor, end: endColor };\r\n        const waveColors = {\r\n          wave1: wave1Color,\r\n          wave2: wave2Color,\r\n          wave3: wave3Color,\r\n          wave1Alpha: wave1Alpha.toString(),\r\n          wave2Alpha: wave2Alpha.toString(),\r\n          wave3Alpha: wave3Alpha.toString()\r\n        };\r\n        const menuColors = {\r\n          backgroundColor: menuBackgroundColor,\r\n          textColor: menuTextColor,\r\n          buttonColor: menuButtonColor\r\n        };\r\n        const dataColumnColors = {\r\n          textColor: dataColumnTextColor,\r\n          backgroundColor: dataColumnBackgroundColor,\r\n          alpha: dataColumnAlpha.toString()\r\n        };\r\n        const dataEntryColor = dataEntryBackgroundColor;\r\n        await saveUserTheme(user.uid, themeName, gradientColors, waveColors, menuColors, dataColumnColors, dataEntryColor);\r\n        const updatedThemes = await getUserThemes(user.uid);\r\n        setThemes(updatedThemes);\r\n        setMessage('Theme saved successfully!');\r\n      } else {\r\n        setMessage('Please enter a theme name.');\r\n      }\r\n    } catch (error) {\r\n      setMessage(`Error saving theme: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleApplyTheme = (theme) => {\r\n    setStartColor(theme.gradientColors.start);\r\n    setEndColor(theme.gradientColors.end);\r\n    setWave1Color(theme.waveColors.wave1);\r\n    setWave2Color(theme.waveColors.wave2);\r\n    setWave3Color(theme.waveColors.wave3);\r\n    setWave1Alpha(parseFloat(theme.waveColors.wave1Alpha));\r\n    setWave2Alpha(parseFloat(theme.waveColors.wave2Alpha));\r\n    setWave3Alpha(parseFloat(theme.waveColors.wave3Alpha));\r\n    setMenuBackgroundColor(theme.menuColors.backgroundColor);\r\n    setMenuTextColor(theme.menuColors.textColor);\r\n    setMenuButtonColor(theme.menuColors.buttonColor);\r\n    setDataColumnTextColor(theme.dataColumnColors.textColor);\r\n    setDataColumnBackgroundColor(theme.dataColumnColors.backgroundColor);\r\n    setDataColumnAlpha(parseFloat(theme.dataColumnColors.alpha));\r\n    setDataEntryBackgroundColor(theme.dataEntryColor);\r\n    setGradientColors(theme.gradientColors);\r\n    setWaveColors(theme.waveColors);\r\n    setMenuColors(theme.menuColors);\r\n    setDataColumnColors(theme.dataColumnColors);\r\n    setDataEntryColor(theme.dataEntryColor);\r\n  };\r\n\r\n  const handleDeleteTheme = async (themeName) => {\r\n    try {\r\n      const user = auth.currentUser;\r\n      if (user) {\r\n        await deleteUserTheme(user.uid, themeName);\r\n        const updatedThemes = await getUserThemes(user.uid);\r\n        setThemes(updatedThemes);\r\n        setMessage('Theme deleted successfully!');\r\n      }\r\n    } catch (error) {\r\n      setMessage(`Error deleting theme: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <div className=\"profile-content\">\r\n        <h2>Profile</h2>\r\n        <p>Customize your background gradient:</p>\r\n        <div className=\"color-picker\">\r\n          <br></br>\r\n          <label>Start Color: </label>\r\n          <input\r\n            type=\"color\"\r\n            value={startColor}\r\n            onChange={(e) => setStartColor(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"color-picker\">\r\n          <label>End Color: </label>\r\n          <input\r\n            type=\"color\"\r\n            value={endColor}\r\n            onChange={(e) => setEndColor(e.target.value)}\r\n          />\r\n        </div>\r\n        <p>Customize your wave colors:</p>\r\n        <div className=\"color-picker\">\r\n          <br></br>\r\n          <label>Wave 1 Color: </label>\r\n          <input\r\n            type=\"color\"\r\n            value={`#${wave1Color.match(/\\d+/g).slice(0, 3).map((x) => (+x).toString(16).padStart(2, '0')).join('')}`}\r\n            onChange={handleWaveColorChange(wave1Color, setWave1Color, wave1Alpha, setWave1Alpha)}\r\n          />\r\n          <br></br>\r\n          <label>Transparency: </label>\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            step=\"0.01\"\r\n            value={wave1Alpha}\r\n            onChange={handleWaveAlphaChange(wave1Alpha, setWave1Alpha, wave1Color, setWave1Color)}\r\n          />\r\n        </div>\r\n        <div className=\"color-picker\">\r\n          <label>Wave 2 Color: </label>\r\n          <input\r\n            type=\"color\"\r\n            value={`#${wave2Color.match(/\\d+/g).slice(0, 3).map((x) => (+x).toString(16).padStart(2, '0')).join('')}`}\r\n            onChange={handleWaveColorChange(wave2Color, setWave2Color, wave2Alpha, setWave2Alpha)}\r\n          />\r\n          <br></br>\r\n          <label>Transparency: </label>\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            step=\"0.01\"\r\n            value={wave2Alpha}\r\n            onChange={handleWaveAlphaChange(wave2Alpha, setWave2Alpha, wave2Color, setWave2Color)}\r\n          />\r\n        </div>\r\n        <div className=\"color-picker\">\r\n          <label>Wave 3 Color: </label>\r\n          <input\r\n            type=\"color\"\r\n            value={`#${wave3Color.match(/\\d+/g).slice(0, 3).map((x) => (+x).toString(16).padStart(2, '0')).join('')}`}\r\n            onChange={handleWaveColorChange(wave3Color, setWave3Color, wave3Alpha, setWave3Alpha)}\r\n          />\r\n          <br></br>\r\n          <label>Transparency: </label>\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            step=\"0.01\"\r\n            value={wave3Alpha}\r\n            onChange={handleWaveAlphaChange(wave3Alpha, setWave3Alpha, wave3Color, setWave3Color)}\r\n          />\r\n        </div>\r\n        <p>Customize your menu colors:</p>\r\n        <div className=\"color-picker\">\r\n          <br></br>\r\n          <label>Menu Background Color: </label>\r\n          <input\r\n            type=\"color\"\r\n            value={menuBackgroundColor}\r\n            onChange={handleMenuColorChange(setMenuBackgroundColor)}\r\n          />\r\n        </div>\r\n        <div className=\"color-picker\">\r\n          <label>Menu Text Color: </label>\r\n          <input\r\n            type=\"color\"\r\n            value={menuTextColor}\r\n            onChange={handleMenuColorChange(setMenuTextColor)}\r\n          />\r\n        </div>\r\n        <div className=\"color-picker\">\r\n          <label>Menu Button Color: </label>\r\n          <input\r\n            type=\"color\"\r\n            value={menuButtonColor}\r\n            onChange={handleMenuColorChange(setMenuButtonColor)}\r\n          />\r\n        </div>\r\n        <p>Customize your data column text color:</p>\r\n        <div className=\"color-picker\">\r\n          <br></br>\r\n          <label>Data Column Text Color: </label>\r\n          <input\r\n            type=\"color\"\r\n            value={dataColumnTextColor}\r\n            onChange={handleDataColumnTextColorChange}\r\n          />\r\n        </div>\r\n        <p>Customize your data column background color:</p>\r\n        <div className=\"color-picker\">\r\n          <br></br>\r\n          <label>Data Column Background Color: </label>\r\n          <input\r\n            type=\"color\"\r\n            value={dataColumnBackgroundColor}\r\n            onChange={handleDataColumnBackgroundColorChange}\r\n          />\r\n        </div>\r\n        <div className=\"color-picker\">\r\n          <br></br>\r\n          <label>Transparency: </label>\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            step=\"0.01\"\r\n            value={dataColumnAlpha}\r\n            onChange={handleDataColumnAlphaChange}\r\n          />\r\n        </div>\r\n        <p>Customize your data entry background color:</p>\r\n        <div className=\"color-picker\">\r\n          <br></br>\r\n          <label>Data Entry Background Color: </label>\r\n          <input\r\n            type=\"color\"\r\n            value={dataEntryBackgroundColor}\r\n            onChange={handleDataEntryBackgroundColorChange}\r\n          />\r\n        </div>\r\n        <br></br>\r\n        <button onClick={handleSave} disabled={buttonDisabled}>Save Preferences</button><br></br><br></br>\r\n        <button onClick={handleReset}>Reset to Default</button><br></br><br></br>\r\n        <div className=\"theme-management\">\r\n          <h3>Manage Themes</h3>\r\n          <input type=\"text\" placeholder=\"Enter theme name\" value={themeName} onChange={(e) => setThemeName(e.target.value)} />\r\n          <button onClick={handleSaveTheme}>Save Theme</button>\r\n          {themes.length > 0 && (\r\n            <>\r\n              <h4>Saved Themes</h4>\r\n              <ul>\r\n                {themes.map((theme) => (\r\n                  <li key={theme.name}>\r\n                    <button onClick={() => handleApplyTheme(theme)}>Apply {theme.name}</button>\r\n                    <button onClick={() => handleDeleteTheme(theme.name)}>Delete</button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </>\r\n          )}\r\n        </div>\r\n        {message && <p>{message}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}