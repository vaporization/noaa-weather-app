{"ast":null,"code":"// packages/react/compose-refs/src/composeRefs.tsx\nimport * as React from \"react\";\nfunction setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    ref(value);\n  } else if (ref !== null && ref !== void 0) {\n    ref.current = value;\n  }\n}\nfunction composeRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n  return node => refs.forEach(ref => setRef(ref, node));\n}\nfunction useComposedRefs() {\n  for (var _len2 = arguments.length, refs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    refs[_key2] = arguments[_key2];\n  }\n  return React.useCallback(composeRefs(...refs), refs);\n}\nexport { composeRefs, useComposedRefs };","map":{"version":3,"names":["React","setRef","ref","value","current","composeRefs","_len","arguments","length","refs","Array","_key","node","forEach","useComposedRefs","_len2","_key2","useCallback"],"sources":["C:\\Users\\saweb\\noaa-weather-app\\node_modules\\@radix-ui\\react-compose-refs\\src\\composeRefs.tsx"],"sourcesContent":["import * as React from 'react';\n\ntype PossibleRef<T> = React.Ref<T> | undefined;\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    (ref as React.MutableRefObject<T>).current = value;\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]) {\n  return (node: T) => refs.forEach((ref) => setRef(ref, node));\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { composeRefs, useComposedRefs };\n"],"mappings":";AAAA,YAAYA,KAAA,MAAW;AAQvB,SAASC,OAAUC,GAAA,EAAqBC,KAAA,EAAU;EAChD,IAAI,OAAOD,GAAA,KAAQ,YAAY;IAC7BA,GAAA,CAAIC,KAAK;EACX,WAAWD,GAAA,KAAQ,QAAQA,GAAA,KAAQ,QAAW;IAC3CA,GAAA,CAAkCE,OAAA,GAAUD,KAAA;EAC/C;AACF;AAMA,SAASE,YAAA,EAA0C;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAxBC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EACzB,OAAQC,IAAA,IAAYH,IAAA,CAAKI,OAAA,CAASX,GAAA,IAAQD,MAAA,CAAOC,GAAA,EAAKU,IAAI,CAAC;AAC7D;AAMA,SAASE,gBAAA,EAA8C;EAAA,SAAAC,KAAA,GAAAR,SAAA,CAAAC,MAAA,EAAxBC,IAAA,OAAAC,KAAA,CAAAK,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;IAAAP,IAAA,CAAAO,KAAA,IAAAT,SAAA,CAAAS,KAAA;EAAA;EAE7B,OAAahB,KAAA,CAAAiB,WAAA,CAAYZ,WAAA,CAAY,GAAGI,IAAI,GAAGA,IAAI;AACrD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}