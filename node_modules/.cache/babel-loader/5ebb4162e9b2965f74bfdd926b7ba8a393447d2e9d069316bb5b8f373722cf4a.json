{"ast":null,"code":"import{getFirestore,doc,getDoc,setDoc,updateDoc,deleteField}from\"firebase/firestore\";import{auth}from'./firebase';const db=getFirestore();export async function saveUserPreferences(uid,gradientColors,waveColors,menuColors,dataColumnColors,dataEntryColor){try{await setDoc(doc(db,\"users\",uid),{gradientColors,waveColors,menuColors,dataColumnColors,dataEntryColor},{merge:true});console.log(\"User preferences saved successfully\");}catch(error){console.error(\"Error saving user preferences: \",error);}}export async function getUserPreferences(uid){const docRef=doc(db,\"users\",uid);const docSnap=await getDoc(docRef);if(docSnap.exists()){console.log(\"User preferences:\",docSnap.data());return docSnap.data();}else{console.log(\"No such document!\");return null;}}export async function resetUserPreferences(uid){try{await setDoc(doc(db,\"users\",uid),{gradientColors:{start:'#003057',end:'#001F3D'},waveColors:{wave1:'rgba(18, 119, 176, 0.45)',wave2:'rgba(10, 90, 150, 0.45)',wave3:'rgba(5, 60, 120, 0.45)',wave1Alpha:'0.45',wave2Alpha:'0.45',wave3Alpha:'0.45'},menuColors:{backgroundColor:'#286090',textColor:'#FFFFFF',buttonColor:'#286090'},dataColumnColors:{textColor:'#000000',backgroundColor:'#FFFFFF',alpha:'1'},dataEntryColor:'#FFFFFF'},{merge:true});console.log(\"User preferences reset to default successfully\");}catch(error){console.error(\"Error resetting user preferences: \",error);}}export async function saveUserTheme(uid,themeName,gradientColors,waveColors,menuColors,dataColumnColors,dataEntryColor){try{const userRef=doc(db,'users',uid);const userDoc=await getDoc(userRef);const themes=userDoc.exists()&&userDoc.data().themes?userDoc.data().themes:{};themes[themeName]={gradientColors,waveColors,menuColors,dataColumnColors,dataEntryColor};await updateDoc(userRef,{themes});console.log(\"User theme saved successfully\");}catch(error){console.error(\"Error saving user theme: \",error);}}export async function getUserThemes(uid){const docRef=doc(db,\"users\",uid);const docSnap=await getDoc(docRef);if(docSnap.exists()&&docSnap.data().themes){console.log(\"User themes:\",docSnap.data().themes);return Object.entries(docSnap.data().themes).map(_ref=>{let[name,theme]=_ref;return{name,...theme};});}else{console.log(\"No themes found!\");return[];}}export async function deleteUserTheme(uid,themeName){try{const userRef=doc(db,'users',uid);await updateDoc(userRef,{[\"themes.\".concat(themeName)]:deleteField()});console.log(\"User theme deleted successfully\");}catch(error){console.error(\"Error deleting user theme: \",error);}}","map":{"version":3,"names":["getFirestore","doc","getDoc","setDoc","updateDoc","deleteField","auth","db","saveUserPreferences","uid","gradientColors","waveColors","menuColors","dataColumnColors","dataEntryColor","merge","console","log","error","getUserPreferences","docRef","docSnap","exists","data","resetUserPreferences","start","end","wave1","wave2","wave3","wave1Alpha","wave2Alpha","wave3Alpha","backgroundColor","textColor","buttonColor","alpha","saveUserTheme","themeName","userRef","userDoc","themes","getUserThemes","Object","entries","map","_ref","name","theme","deleteUserTheme","concat"],"sources":["C:/Users/saweb/noaa-weather-app/src/userPreferences.js"],"sourcesContent":["import { getFirestore, doc, getDoc, setDoc, updateDoc, deleteField } from \"firebase/firestore\";\r\nimport { auth } from './firebase';\r\n\r\nconst db = getFirestore();\r\n\r\nexport async function saveUserPreferences(uid, gradientColors, waveColors, menuColors, dataColumnColors, dataEntryColor) {\r\n  try {\r\n    await setDoc(doc(db, \"users\", uid), {\r\n      gradientColors,\r\n      waveColors,\r\n      menuColors,\r\n      dataColumnColors,\r\n      dataEntryColor\r\n    }, { merge: true });\r\n    console.log(\"User preferences saved successfully\");\r\n  } catch (error) {\r\n    console.error(\"Error saving user preferences: \", error);\r\n  }\r\n}\r\n\r\nexport async function getUserPreferences(uid) {\r\n  const docRef = doc(db, \"users\", uid);\r\n  const docSnap = await getDoc(docRef);\r\n\r\n  if (docSnap.exists()) {\r\n    console.log(\"User preferences:\", docSnap.data());\r\n    return docSnap.data();\r\n  } else {\r\n    console.log(\"No such document!\");\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function resetUserPreferences(uid) {\r\n  try {\r\n    await setDoc(doc(db, \"users\", uid), {\r\n      gradientColors: { start: '#003057', end: '#001F3D' },\r\n      waveColors: {\r\n        wave1: 'rgba(18, 119, 176, 0.45)',\r\n        wave2: 'rgba(10, 90, 150, 0.45)',\r\n        wave3: 'rgba(5, 60, 120, 0.45)',\r\n        wave1Alpha: '0.45',\r\n        wave2Alpha: '0.45',\r\n        wave3Alpha: '0.45'\r\n      },\r\n      menuColors: {\r\n        backgroundColor: '#286090',\r\n        textColor: '#FFFFFF',\r\n        buttonColor: '#286090'\r\n      },\r\n      dataColumnColors: {\r\n        textColor: '#000000',\r\n        backgroundColor: '#FFFFFF',\r\n        alpha: '1'\r\n      },\r\n      dataEntryColor: '#FFFFFF'\r\n    }, { merge: true });\r\n    console.log(\"User preferences reset to default successfully\");\r\n  } catch (error) {\r\n    console.error(\"Error resetting user preferences: \", error);\r\n  }\r\n}\r\n\r\nexport async function saveUserTheme(uid, themeName, gradientColors, waveColors, menuColors, dataColumnColors, dataEntryColor) {\r\n  try {\r\n    const userRef = doc(db, 'users', uid);\r\n    const userDoc = await getDoc(userRef);\r\n    const themes = userDoc.exists() && userDoc.data().themes ? userDoc.data().themes : {};\r\n    themes[themeName] = {\r\n      gradientColors,\r\n      waveColors,\r\n      menuColors,\r\n      dataColumnColors,\r\n      dataEntryColor\r\n    };\r\n    await updateDoc(userRef, { themes });\r\n    console.log(\"User theme saved successfully\");\r\n  } catch (error) {\r\n    console.error(\"Error saving user theme: \", error);\r\n  }\r\n}\r\n\r\nexport async function getUserThemes(uid) {\r\n  const docRef = doc(db, \"users\", uid);\r\n  const docSnap = await getDoc(docRef);\r\n\r\n  if (docSnap.exists() && docSnap.data().themes) {\r\n    console.log(\"User themes:\", docSnap.data().themes);\r\n    return Object.entries(docSnap.data().themes).map(([name, theme]) => ({ name, ...theme }));\r\n  } else {\r\n    console.log(\"No themes found!\");\r\n    return [];\r\n  }\r\n}\r\n\r\nexport async function deleteUserTheme(uid, themeName) {\r\n  try {\r\n    const userRef = doc(db, 'users', uid);\r\n    await updateDoc(userRef, {\r\n      [`themes.${themeName}`]: deleteField()\r\n    });\r\n    console.log(\"User theme deleted successfully\");\r\n  } catch (error) {\r\n    console.error(\"Error deleting user theme: \", error);\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}